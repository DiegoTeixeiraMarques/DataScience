{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Programação com Python</h1>\n",
    "<h3>Prof. Erneson A. Oliveira</h3>\n",
    "<h4>MBA de Ciências de Dados</h4>\n",
    "<h4>Universidade de Fortaleza</h4>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Aula 04 - Introdução à Python</h1>\n",
    "<br>\n",
    "<img src=\"fig/python.jpg\" width=\"300px\">\n",
    "<br>\n",
    "<a href=http://www.python.org>http://www.python.org</a>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<img src=\"fig/pandas.jpg\" width=\"600px\">\n",
    "<br>\n",
    "<a href=https://pandas.pydata.org>https://pandas.pydata.org</a>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<img src=\"fig/excel.jpg\" width=\"600px\">\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Séries</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<img src=\"fig/serie.jpg\" width=\"200px\">\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "apples=[3,2,0,1]\n",
    "s=pd.Series(apples,name='apples',dtype=np.int64)\n",
    "\n",
    "print(s)\n",
    "\n",
    "# print(type(s))\n",
    "# print(dir(s))\n",
    "\n",
    "print(s.head(2))\n",
    "print(s.tail(2))\n",
    "\n",
    "print(s.ndim)\n",
    "print(s.shape)\n",
    "print(s.mean())\n",
    "print(s.max())\n",
    "print(s.min())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Planilha</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<img src=\"fig/dataframe.jpg\" width=\"600px\">\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': [3,2,0,1],\n",
    "   'oranges': [0,3,7,2]}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "print(df)\n",
    "\n",
    "# print(type(df))\n",
    "# print(dir(df))\n",
    "\n",
    "print(df.ndim)\n",
    "print(df.shape)\n",
    "print(df.mean())\n",
    "print(df.max())\n",
    "print(df.min())\n",
    "print(df.T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': [3,2,0,1],\n",
    "   'oranges': [0,3,7,2]}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "print(df)\n",
    "\n",
    "print([x for x in df.index])\n",
    "print([x for x in df.columns])\n",
    "\n",
    "d={'apples': {'A': 3,\n",
    "              'B': 2,\n",
    "              'C': 0,\n",
    "              'D': 1},\n",
    "   'oranges': {'A': 0,\n",
    "               'B': 3,\n",
    "               'C': 7,\n",
    "               'D': 2}}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "print(df)\n",
    "\n",
    "print([x for x in df.index])\n",
    "print([x for x in df.columns])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Entrada e saída</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': [3,2,0,1],\n",
    "   'oranges': [0,3,7,2],\n",
    "   'bananas': [1,3,5,4],\n",
    "   'avocados': [9,0,0,1]}\n",
    "\n",
    "df0=pd.DataFrame(d)\n",
    "print(df0)\n",
    "\n",
    "df0.to_csv('output.csv',sep=';',encoding='utf-8',index=False) # Escrevendo um CSV\n",
    "\n",
    "df1=pd.read_csv('output.csv',sep=';',usecols=['apples','bananas'],encoding='utf-8') # Lendo um CSV\n",
    "print(df1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Ordenando e filtrando</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': {'A': 3,'B': 2,'C': 0,'D': 1},\n",
    "   'oranges': {'A': 0,'B': 3,'C': 7,'D': 2},\n",
    "   'bananas': {'A': 1,'B': 3,'C': 5,'D': 4},\n",
    "   'avocados': {'A': 9,'B': 0,'C': 0,'D': 1}}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "\n",
    "print(df)\n",
    "\n",
    "print(df.sort_index(axis=0, ascending=False))\n",
    "print(df.sort_index(axis=1, ascending=False))\n",
    "\n",
    "print(df.sort_values(by='oranges'))\n",
    "print(df.sort_values(by=['avocados','apples']))\n",
    "print(df.sort_values(by='oranges',axis=0))\n",
    "\n",
    "print(df)\n",
    "print(df.sort_values(by='B',axis=1))\n",
    "print(df)\n",
    "\n",
    "df.sort_values(by='B',axis=1,inplace=True)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': {'A': 3,'B': 2,'C': 0,'D': 1},\n",
    "   'oranges': {'A': 0,'B': 3,'C': 7,'D': 2},\n",
    "   'bananas': {'A': 1,'B': 3,'C': 5,'D': 4},\n",
    "   'avocados': {'A': 9,'B': 0,'C': 0,'D': 1}}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "\n",
    "print(df)\n",
    "\n",
    "print(df['oranges'])\n",
    "print(df['oranges'][0])\n",
    "print(df.oranges)\n",
    "print(df.oranges[0:2])\n",
    "print(df[0:3])\n",
    "\n",
    "df['oranges'][0]=99\n",
    "print(df)\n",
    "\n",
    "linha=df.loc['A']\n",
    "print(type(linha))\n",
    "print(linha)\n",
    "\n",
    "linhas=df.loc[:,['oranges','bananas']]\n",
    "print(type(linhas))\n",
    "print(linhas)\n",
    "\n",
    "print(df.loc['A','oranges']) # df.at['A','oranges']\n",
    "\n",
    "print(df.iloc[3])\n",
    "print(df.iloc[0:2, 0:2])\n",
    "print(df.iloc[2,2]) # df.iat[2,2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Iterando sobre DataFrames</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': {'A': 3,'B': 2,'C': 0,'D': 1},\n",
    "   'oranges': {'A': 0,'B': 3,'C': 7,'D': 2},\n",
    "   'bananas': {'A': 1,'B': 3,'C': 5,'D': 4},\n",
    "   'avocados': {'A': 9,'B': 0,'C': 0,'D': 1}}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "print(df)\n",
    "\n",
    "for indice in df.index:\n",
    "    print(df.loc[indice,'apples'])\n",
    "\n",
    "for indice in df.index:\n",
    "    print(df['apples'][indice])\n",
    "\n",
    "for i in range(df.shape[0]):\n",
    "    print(df.iloc[i,0])\n",
    "\n",
    "for indice,linha in df.iterrows():\n",
    "    print(indice,linha[\"apples\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Higienização de DataFrames</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "d={'apples': [2,np.nan,1,5,1],\n",
    "   'oranges': [3,2,1,3,1],\n",
    "   'grapes': [3,2,1,3,1]}\n",
    "\n",
    "df=pd.DataFrame(d)\n",
    "print(df)\n",
    "\n",
    "print(df.dropna(axis=0,how='any')) # Removing rows with missing values\n",
    "print(df.dropna(axis=1,how='any')) # Removing columns with missing values\n",
    "\n",
    "print(df.drop_duplicates(keep='first')) # Removing duplicated rows (but keeping the first)\n",
    "print(df.T.drop_duplicates(keep='first').T) # Removing duplicated columns (but keeping the first)\n",
    "\n",
    "print(df[df.apples > 1]) # Removing rows with zero values on column 'apples'\n",
    "\n",
    "print(df[df.apples > 1].reset_index(drop=True)) # ...and reseting the indexes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<h1>Relacionando DataFrames</h1>\n",
    "</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<center>\n",
    "<img src=\"fig/join.jpg\" width=\"600px\">\n",
    "</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "d={'Customer_id':pd.Series([1,2,3,4,5,6]),\n",
    "   'Product':pd.Series(['Oven','Oven','Oven','Television','Television','Television'])}\n",
    "df0=pd.DataFrame(d)\n",
    "print(df0)\n",
    "\n",
    "d={'Customer_id':pd.Series([2,4,6]),\n",
    "   'State':pd.Series(['California','California','Texas'])}\n",
    "df1 = pd.DataFrame(d)\n",
    "print(df1)\n",
    "\n",
    "print(pd.merge(df0, df1, on='Customer_id', how='inner')) #inner join\n",
    "print(pd.merge(df0, df1, on='Customer_id', how='outer')) #outter join\n",
    "print(pd.merge(df0, df1, on='Customer_id', how='left')) # left join\n",
    "print(pd.merge(df0, df1, on='Customer_id', how='right')) # right join"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
